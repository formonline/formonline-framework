<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=UTF-8" http-equiv="content-type">
  <title>help</title>
  
  <style >
  body { font-family: Verdana; font-size: 11pt; font-weight: normal;}
  pre   {  border: 1px solid #ccc; margin-left: 3px; padding: 5px; color:#333;}
  </style>
</head>
<body >
<br>

<big><big style="color: rgb(102, 0, 0);">
		
		Mini-Guide de rédaction des TEMPLATES
		
		</big></big>  <br>

<br>
<br>
<a href=#type>1/ Types de templates</a><br>
<a href=#fusion>2/ Construction des champs de fusion</a><br>
<a href=#check>3/ Affichages conditionnels : la balise IF</a><br>
<a href=#loop>4/ Appels transverses à d'autres formulaires : les balises LOOP + FILTER + LINK ...</a><br>
<a href=#lot>5/ Traitement de lot</a><br>
<br>


<a id=type />
<span style="font-weight: bold;color: rgb(102, 0, 0);">
1) Types de templates</span><br>
Les templates permettent de décrire les documents à fusionner ou les traitements de lot. <br>
Les documents à fusionner peuvent être de
plusieurs sortes :<br>

<br>

Documents word :<br>

 - type HTML : le
contenu doit être écrit en HTML<br>

 - type RTF : le
contenu doit être écrit en RTF<br>

Pour
générer le template, il suffit de
créer le document sur word, puis de le sauvegarder en HTML
(sans images) ou RTF, d'ouvrir le document avec un éditeur
de texte type notepad ou notepad++, et faire un gros copier/coller. <br>

<br>

Excel :<br>

- CSV : le contenu
doit correspondre à des valeurs
séparées par des ";"<br>

<br>

Mail :<br>

- type MAIL : le
contenu doit correspondre à du texte simple ou à du HTML<br>
- type MAILTO : le
contenu doit correspondre à du texte simple, mais il est nécessaire de
préciser des informations complémentaires en commentaire HTML: le destinataire, le sujet, etc...<br>
Syntaxe : <br>
<!-- name='NOM DU MAIL' to='DESTINATAIRE' subject='OBJET DU MAIL' -->TEXTE DU MAIL...

<br>
<br>
- type LOT : permet de lancer des traitements de lot.<br>
(cf. spécificités traitement de LOT <a rhef=#lot>plus bas</a>)
<br>
<br>

<br>





<a id=fusion />
<span style="font-weight: bold;color: rgb(102, 0, 0);">2) Description des champs de fusion</span><br>

les champs à fusionner doivent avoir la syntaxe suivante :<br>

<pre>{%F0000xQ0000y%}</pre>
ou <pre>{%F0000xP0000y%}</pre><br>

ou "x" correspond au
numéro du questionnaire ou se trouve la donnée, <br>

"y" correspond au
numéro de proposition ou de question correspondant
à la donnée.<br><br>

Pour une question de
type texte, date, euro, etc.... on va chercher la valeur de la
proposition,<br><br>

pour une question de
type choix exclusif, on va chercher l'intitulé de la
proposition sélectionnée.<br><br>

la chaîne
doit toujours faire 16 caractères, c'est pour cela que les
numéros de formulaire, de question ou de proposition sont
complétés de zéros pour être
sur 5 caractères (exemple : 00123).<br><br>

Si le formulaire est
un formulaire fils, il est possible d'aller chercher des informations
du formulaire père, il suffit de préciser le
numéro du questionnaire du père.<br><br>
Pour aller chercher des données d'autres formulaires pour les fusionner,
utiliser la balise LOOP.

<br><br>

<strong>
Balises spécifiques</strong><br>
il existe des balises
spécifiques :<br>

<pre>{%SID.........%}</pre>
: numéro (id) du formulaire <br>

<pre>{%DATE........%}</pre>
: date du jour<br>

<pre>{%PARENT_SID..%}</pre>
: numéro (id) du formulaire parent<br>

<pre>{%PWD.........%}</pre>
: mot de passe<br>

<pre>{%SDATE.......%}</pre>
: date de modification du formulaire<br>

<pre>{%SDATH.......%}</pre>
: date/heure de modification du formulaire<br>

<pre>{%LOCKED......%}</pre>
: indicateur verrouillé/validé (=1) ou non(=0)<br>

<pre>{%TITLE.......%} ou {%TITRE.......%}</pre>
: titre du formulaire courant (correspondant au PID titre)<br>

<pre>{%F00123FULLTX%}</pre>
: export complet du formulaire(groupes publiques) public en HTML (les champs sont repris dans l'ordre du formulaire et associés
 à des classes CSS qui peuvent être redéfinies.)<br>

<pre>{%F00123FULLTP%}</pre>
: export complet du formulaire public(groupes publiques +privés) en HTML <br>

<pre>{%F00123FULLCS%}</pre>
: export complet du formulaire public(groupes publiques) en CSV (les champs sont repris dans l'ordre du formulaire)<br>

<pre>{%F00123FULLCP%}</pre>
: export complet du formulaire public(groupes publiques + privés)  en CSV <br>


<br>

exemple HTML:<br>
<pre><strong>
Bonjour M. &lt;strong&gt;{%F00001P00012%}&lt;/strong&gt;</strong><br>
</pre>
<br>

exemple CSV:<br>
<pre>{%SIDxxxxxxxxx%};{%DATExxxxxxxx%};{%SID_PARENTxx%};{%F00001P00001%};{%F00001Q00012%};{%F00002P00312%};</pre>
</pre><br>
<br>
exemple MAILTO:<br><pre>
<!-- name='Mail tuteur' to='{%F00003P01371%}' subject='Demande de formation de votre salarié en emploi-tremplin {%F00003P01357%} {%F00003P01356%}' -->
Monsieur,
Comme suite à la demande de formation de votre salarié en emploi-tremplin [{%F00003P01357%} {%F00003P01356%}],...
</pre><br>
<br>


<br>
Exemple de formatage :<br>
<pre>{%F0000xP0000y|R0000z%}</pre>
: Formate la valeur de la proposition y sur z caractères max, complété par des blancs, aligné à droite<br>
<pre>{%F0000xP0000y|L0000z%}</pre>
: Formate la valeur de la proposition y sur z caractères max, complété par des blancs, aligné à gauche<br>
<pre>{%F0000xP0000y|E0000z%}</pre>
: affichage en centimes d'euros de la valeur de la proposition y  sur z caractères max, complété par des zéros, aligné à droite<br>
<br>

<br>
<a id=check />
<span style="font-weight: bold;color: rgb(102, 0, 0);">3) Affichages conditionnels : la balise IF + CHECK</span><br><br>
 
La balise IF permet de conditionner un affichage à une valeur. La condition 
est donnée avec la balise FILTER (P01234 = val) : <br>
<pre>{%IF....P&lt;pid&gt;%}{%CHECK.P01234%}val{%/CHECKP01234%} contenu {%/IF...P&lt;pid&gt;%}</pre>

Il est possible d'avoir plusieurs valeurs a choix : <pre>{%CHECK.P01234%}val1||val2||val3{%/CHECKP01234%}</pre>
Il est possible de tester la NON condition (P01234 != val) : <pre>{%CHECK.P01234%}!val1{%/CHECKP01234%}</pre>
<br>
La balise IF permet de conditionner un affichage à une valeur. La condition 
est donnée par la valeur booléenne d'un paramètre de configuration "isParam" :
<pre>{%IF....CONFIG%}{%CHECK.CONFIG%}isParam{%/CHECKCONFIG%} contenu {%/IF...CONFIG%}</pre>

Il est possible de tester la "non condition" : 
<pre>...{%CHECK.CONFIG%}!isParam{%/CHECKCONFIG%}...</pre>
<br>
Ici l'affichage est conditionné par la valeur du LOCK du formulaire :
<pre>{%IF....LOCKED%} {%CHECK.LOCKED%}true{%/CHECKLOCKED%} contenu {%/IF...LOCKED%}</pre>
<br>

 Ici on limite le nombre de formulaire :
<pre>{%LIMIT.......%}N{%/LIMIT......%}</pre>
<br>



<br>


<a id=loop />
<span style="font-weight: bold;color: rgb(102, 0, 0);">4) Appels transverses à d'autres formulaires : les balises <strong>LOOP</strong> + FILTER + LINK ...</span><br><br>
<br>
La balise LOOP permet l'inclusion d'une liste de formulaires fils (du fid = 01234), sauf s'il y a d'autres balises de type LINK... ensuite<br>
 Ce fragment de template sera dupliqué autant de fois 
 que l'on trouve de formulaires liés. <br>
<br>
 exemple :<br>
<pre> {%LOOP..F00123%}...{%/LOOP.F00123%}</pre><br>
 <br>
     
 Par défaut, les formulaires liés sont les formulaires fils.<br>
 Mais il est possible d'utiliser d'autres balises pour choisir
 les formulaires à inclure, ou les filtrer (voir plus bas)<br>
            <br> 
            Cas particulier : la balise LOOP<strong>R</strong> permet un appel récursif de la balise, c'est à dire 
            qu'à chaque fois que ce template sera dupliqué pour chaque fils, et tous ses descendants (en réappliquant  
            les mêmes critères de filtre et/ou de lien).<br>
            <br>
                
                
 * cas d'un <strong>LINKP.P</strong> : le SID du form courant  est stocké
 dans une proposition &lt;pid&gt; du (ou des) forms qu'on cherche à inclure<br>
<em>exemple :</em><br>
 <pre>{%LINKP.P&lt;pid&gt;%} </pre><br>
 <br>
                
 * cas d'un <strong>LINKS.P</strong> : une proposition (pid) du form courant stocke
 le SID du form qu'on cherche à inclure <br> 

<em>exemple :</em><br>
 <pre>{%LINKS.P&lt;pid&gt;%} </pre> <br> 
   <br> 
            
                
 * cas d'un <strong>LINKV.P</strong> : on recherche les forms qui ont une 
 valeur de proposition "valLinkVid" identique à la valeur située
 entre les balises "linkv.p" <br> 

<em>exemple :</em><br>
<pre> {%LINKV.P&lt;pid&gt;%}val{%/LINKVP&lt;pid&gt;%} </pre> <br> 
   <br>              
                
 * cas d'un <strong>LINKSID</strong> : on recherche le form de type "fid", qui a le SID
 correspondant à la valeur située entre les balises "linksid"  <br> 

<em>exemple :</em><br>
<pre> {%LINKSID.....%}<sid>{%/LINKSID....%} </pre> <br> 
                
         <br>         
                
 * cas d'un <strong>LINK_SPARENT</strong> : on recherche les formulaires fils du 
 formulaire courant. <br> 
 (C'est le fonctionnement par défaut, mais on peut avoir à le
 redéfinir dans le cas d'un appel
 récursif pour un sous-template, ou si on spécifie un filtre) <br> 

<em>exemple :</em><br>
<pre> {%LINK_SPARENT%} </pre> <br> 
 
  <br> 
                
 * cas d'un <strong>LINK_SCHILD</strong> : on recherche le formulaire père du 
 formulaire courant. <br> 
 (par défaut il suffit d'utiliser une balise avec le fid du form
 père, mais on peut avoir à le redéfinir dans le cas d'un appel
 récursif pour un sous-template) <br> 

<em>exemple :</em><br>
<pre> {%LINK_SCHILD.%} </pre><br>
 
<br>

                
 * cas d'un <strong>FILTER</strong> : on va restreindre les fils du form courant
 (par défaut le loop ramène les fils) à ceux dont la valeur de la 
 proposition &lt;pid&gt;=value<br>
 Il est possible d'utiliser un OU : val1||val2, ou encore un NOT : !val1

<em>exemple :</em><br>
 <pre>{%FILTERP&lt;pid&gt;%}val{%/FILTE&lt;pid&gt;%} </pre><br>
 <br>
 
 * cas d'un <strong>SORT</strong>  : on va trier les SF résultat sur la valeur de la 
                  proposition <pid>, en mode VAL (="asc" ou "desc")<br>
                  ! le SORT ne s'applique pas avec un FILTER<br>
                  ! il faut que tous les submitForm aient bien une réponse existante, 
                      sinon cela peut retirer des SF de la sélection
                  <br>
                <em>exemple :</em>
                <pre> {%SORT..P<pid>%}desc{%/SORT.<pid>%} </pre><br>
                  
          <br>
balises spécifiques utilisables dans une balise LOOP : "INDEX", "LAST_INDEX"<br>
<br>       




<a id=lot />
<span style="font-weight: bold;color: rgb(102, 0, 0);">5) Traitement de lot</span><br><br>
<br>       
Le traitement de lot permet de modifier les données pour un ensemble de submitforms de même type, éventuellement filtrés (avec un template filtre SQL).<br>
Il s'agit d'un script pouvant contenir plusieurs lignes d'instructions séparées par des ";".<br>
<br>

<em>exemple de mise à jour d'une réponse à une proposition pour tous les forms :<br></em>
<em> (la proposition du questionnaire lue doit être en mode "initOnLoad")</em>
<pre>{%F00045P00123%}=546;<br>
{%F00045P00123%}={%DATE........%}; </pre><br>
<br>

<em>verrouille tous les forms : </em> <pre>LOCKALL </pre><br>

<em>déverrouille tous les forms : </em><pre>UNLOCKALL </pre>  <br>

<em>appel d'une procédure stockée pour chaque form :</em><pre>EXECUTE_BY_ID maprocstock({%SID......%}, 123) </pre>  <br>

<em>appel unique d'une procédure stockée : </em><pre>EXECUTE maprocstock(aa, 123) </pre> <br>

<em>appel de la methode "doSpecificAction" de la classe ContextUserAction : </em><pre>SPECIFIC param1 param2 param3 ... </pre> <br>

<br>


</body>
</html>


